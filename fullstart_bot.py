from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import BotCommand, BotCommandScopeDefault
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import ParseMode
from aiogram.types import KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
import logging

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=BOT_TOKEN,
          parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot, storage=MemoryStorage())
logging.basicConfig(level=logging.INFO)

async def set_default_commands(bot: Bot):
    return await bot.set_my_commands(
        commands=[
            BotCommand('start', '–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'),
            BotCommand('manager', '–ß–∞—Ç —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º'),
            BotCommand('help', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'),
            BotCommand('contacts', '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
        ],
        scope=BotCommandScopeDefault()
    )

@dp.message_handler(commands='start')
async def command_start(message: types.Message):
    await message.reply(f'–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, {message.from_user.first_name}!',
                        reply_markup=kb)
    await set_default_commands(bot)

@dp.message_handler(commands='manager')
async def command_manager(message: types.Message):
    await message.reply('–ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏—Ö –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É!',
                        reply_markup=manager_kb())

@dp.message_handler(commands='help')
async def command_manager(message: types.Message):
    await message.reply('–ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ä–∞–±–æ—Ç–æ–π –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –í–∞—à–µ–≥–æ, '
                        '—Ç–æ –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º, –º—ã —Ä–µ—à–∏–º –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É!',
                        reply_markup=help_kb())

@dp.message_handler(commands='contacts')
async def command_manager(message: types.Message):
    await message.reply(text_contacts,
                        parse_mode=ParseMode.MARKDOWN,
                        reply_markup=manager_kb())

kb = ReplyKeyboardMarkup(resize_keyboard=True)
kb.add(KeyboardButton('–û –Ω–∞—Å üìÉ')).insert(KeyboardButton('–ù–∞—à–∏ —É—Å–ª—É–≥–∏ üöÄ')).add(KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üì±üì©'))

photo_logo = 'https://t.me/forbot_nikita/2'

@dp.message_handler(text='–û –Ω–∞—Å üìÉ')
async def description(message: types.Message):
    await bot.send_photo(chat_id=message.chat.id,
                         photo=photo_logo,
                         caption=text_logo,
                         reply_markup=content,
                         parse_mode=ParseMode.MARKDOWN)

@dp.message_handler(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
async def chat(message: types.Message):
    await message.reply('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥', reply_markup=kb)



def manager_kb():
    kb = InlineKeyboardMarkup()
    btn = InlineKeyboardButton(text="–ß–∞—Ç —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data='manager', url='http://t.me/manager_fullstart')
    kb.add(btn)
    return kb

def help_kb():
    kb = InlineKeyboardMarkup()
    btn = InlineKeyboardButton(text="–ß–∞—Ç —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", callback_data='helpi', url='http://t.me/nikitasyukhin')
    kb.add(btn)
    return kb


content = InlineKeyboardMarkup()
kb1 = InlineKeyboardMarkup()
btn1 = InlineKeyboardButton(text='–ù–∞—à–µ VK-—Å–æ–æ–±—â–µ—Å—Ç–≤–æ', url='https://vk.com/full_start', callback_data='vk')
btn2 = InlineKeyboardButton(text='–ù–∞—à YouTube-–∫–∞–Ω–∞–ª', url='https://www.youtube.com/channel/UCM46GXULmK-NLi7SemJ1XYQ', callback_data='yt')
btn3 = InlineKeyboardButton(text='–ù–∞—à Telegram-–∫–∞–Ω–∞–ª', url='http://t.me/full_start', callback_data='tg')
content.add(btn1).add(btn2).add(btn3)


@dp.message_handler(text='–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üì±üì©')
async def chat(message: types.Message):
    await message.reply(text=text_contacts,
                        parse_mode=ParseMode.MARKDOWN,
                        reply_markup=manager_kb())

@dp.message_handler(text='–ù–∞—à–∏ —É—Å–ª—É–≥–∏ üöÄ')
async def price(message: types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
    markup.add('–ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏ ‚ö°').add("‚¨ÖÔ∏è–ù–∞–∑–∞–¥")
    await bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥—ë–º –∫ —É—Å–ª—É–≥–∞–º‚úÖ', reply_markup=markup)
    btn_1 = (types.InlineKeyboardButton(text='–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Telegram-–±–æ—Ç–æ–≤', callback_data='main'))
    btn_2 = (types.InlineKeyboardButton(text='–ö—É—Ä—Å—ã –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é', callback_data='courses'))
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(btn_1).add(btn_2)
    await bot.send_message(chat_id=message.chat.id,
                           text=text_price,
                           parse_mode=ParseMode.MARKDOWN,
                           reply_markup=keyboard)

@dp.message_handler(text='–ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏ ‚ö°')
async def chat(message: types.Message):
    await message.reply(text=text_sales,
                        parse_mode=ParseMode.MARKDOWN)


@dp.callback_query_handler(text=['main', 'courses'])
async def first_btn_process(call: types.CallbackQuery):
    if call.data == 'main':
        await call.message.answer(text="*–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ*, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É Telegram-–±–æ—Ç–∞:",
                                  parse_mode=ParseMode.MARKDOWN,
                                  reply_markup=price1_main_kb())
    else:
        await call.message.answer(text="*–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å*, –∫–æ—Ç–æ—Ä—ã–π –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø—Ä–æ–π—Ç–∏:",
                                  parse_mode=ParseMode.MARKDOWN,
                                  reply_markup=price1_courses_kb)

def price1_main_kb():
    kb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton(text='"LITE"', callback_data='lite')
    btn2 = InlineKeyboardButton(text='"PRO"', callback_data='pro')
    btn3 = InlineKeyboardButton(text='"FULL"', callback_data='full')
    kb.add(btn1, btn2, btn3)
    return kb

price1_courses_kb = InlineKeyboardMarkup()
kb2 = InlineKeyboardMarkup()
btn1 = InlineKeyboardButton(text='–ö—É—Ä—Å ¬´Python —Å –Ω—É–ª—è¬ª', callback_data='course1')
btn2 = InlineKeyboardButton(text='–ö—É—Ä—Å ¬´–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Telegram-–±–æ—Ç–æ–≤¬ª', callback_data='course2')
price1_courses_kb.add(btn1).add(btn2)

photo_lite = 'https://t.me/forbot_nikita/9'
photo_pro = 'https://t.me/forbot_nikita/10'
photo_full = 'https://t.me/forbot_nikita/8'
photo_course1 = 'https://t.me/forbot_nikita/11'
photo_course2 = 'https://t.me/forbot_nikita/12'

@dp.callback_query_handler(text=['lite', 'pro', 'full'])
async def first_btn_process(call: types.CallbackQuery):
    if call.data == 'lite':
        await call.answer(text='–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞ "LITE"',
                          show_alert=True)
        await call.message.answer_photo(caption=text_lite,
                                        photo=photo_lite,
                                        parse_mode=ParseMode.MARKDOWN,
                                        reply_markup=pay_kb)
    elif call.data == 'pro':
        await call.answer(text='–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞ "PRO"',
                          show_alert=True)
        await call.message.answer_photo(caption=text_pro,
                                        photo=photo_pro,
                                        parse_mode=ParseMode.MARKDOWN,
                                        reply_markup=pay_kb1)
    else:
        await call.answer(text='–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞ "FULL"',
                          show_alert=True)
        await call.message.answer_photo(caption=text_full,
                                        photo=photo_full,
                                        parse_mode=ParseMode.MARKDOWN,
                                        reply_markup=pay_kb2)

@dp.callback_query_handler(text=['course1', 'course2'])
async def first_btn_process(call: types.CallbackQuery):
    if call.data == 'course1':
        await call.message.answer_photo(caption=text_course1,
                                        parse_mode=ParseMode.MARKDOWN,
                                        photo=photo_course1,
                                        reply_markup=pay_kb3)
    else:
        await call.message.answer_photo(caption=text_course2,
                                        parse_mode=ParseMode.MARKDOWN,
                                        photo=photo_course2,
                                        reply_markup=pay_kb4)

pay_kb = InlineKeyboardMarkup()
kb3 = InlineKeyboardMarkup()
btn1 = InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='pay')
btn2 = InlineKeyboardButton(text='–ß–∞—Ç —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', callback_data='mana', url='http://t.me/manager_fullstart')
pay_kb.add(btn1).add(btn2)

pay_kb1 = InlineKeyboardMarkup()
kb4 = InlineKeyboardMarkup()
btn1 = InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='pay1')
btn2 = InlineKeyboardButton(text='–ß–∞—Ç —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', callback_data='mana1', url='http://t.me/manager_fullstart')
pay_kb1.add(btn1).add(btn2)

pay_kb2 = InlineKeyboardMarkup()
kb5 = InlineKeyboardMarkup()
btn1 = InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='pay2')
btn2 = InlineKeyboardButton(text='–ß–∞—Ç —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', callback_data='mana2', url='http://t.me/manager_fullstart')
pay_kb2.add(btn1).add(btn2)

pay_kb3 = InlineKeyboardMarkup()
kb6 = InlineKeyboardMarkup()
btn1 = InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='pay3')
btn2 = InlineKeyboardButton(text='–ß–∞—Ç —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', callback_data='mana3', url='http://t.me/manager_fullstart')
pay_kb3.add(btn1).add(btn2)

pay_kb4 = InlineKeyboardMarkup()
kb7 = InlineKeyboardMarkup()
btn1 = InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='pay4')
btn2 = InlineKeyboardButton(text='–ß–∞—Ç —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', callback_data='mana4', url='http://t.me/manager_fullstart')
pay_kb4.add(btn1).add(btn2)




@dp.callback_query_handler(text=['pay', 'pay1', 'pay2'])
async def first_btn_process(call: types.CallbackQuery):
    if call.data == 'pay':
        await call.message.answer(text=text_pay,
                                  parse_mode=ParseMode.MARKDOWN,
                                  reply_markup=manager_kb())
    elif call.data == 'pay1':
        await call.message.answer(text=text_pay1,
                                  parse_mode=ParseMode.MARKDOWN,
                                  reply_markup=manager_kb())
    else:
        await call.message.answer(text=text_pay2,
                                  parse_mode=ParseMode.MARKDOWN,
                                  reply_markup=manager_kb())


@dp.callback_query_handler(text=['pay3', 'pay4'])
async def first_btn_process(call: types.CallbackQuery):
    if call.data == 'pay3':
        await call.message.answer(text="–£ –í–∞—Å –∏–º–µ–µ—Ç—Å—è –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É?",
                                  reply_markup=pay_kb_course1())
    else:
        await call.message.answer(text="–£ –í–∞—Å –∏–º–µ–µ—Ç—Å—è –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É?",
                                  reply_markup=pay_kb_course2())

def pay_kb_course1():
    kb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton(text='–î–∞', callback_data='yes')
    btn2 = InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no')
    kb.add(btn1, btn2)
    return kb

def pay_kb_course2():
    kb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton(text='–î–∞', callback_data='yes1')
    btn2 = InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no1')
    kb.add(btn1, btn2)
    return kb

def pay_kb_course3():
    kb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='yes3')
    kb.add(btn1)
    return kb

def pay_kb_course4():
    kb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='yes4')
    kb.add(btn1)
    return kb

@dp.callback_query_handler(text=['yes', 'no'])
async def first_btn_process(call: types.CallbackQuery):
    if call.data == 'yes':
        await call.answer(text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º',
                          show_alert=True)
        await call.message.answer(text='–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:')
    else:
        await call.message.answer(text=text_pay_course,
                                  parse_mode=ParseMode.MARKDOWN,
                                  reply_markup=manager_kb())

@dp.callback_query_handler(text=['yes1', 'no1'])
async def first_btn_process(call: types.CallbackQuery):
    if call.data == 'yes1':
        await call.answer(text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º',
                          show_alert=True)
        await call.message.answer(text='–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:')
    else:
        await call.message.answer(text=text_pay_course1,
                                  parse_mode=ParseMode.MARKDOWN,
                                  reply_markup=manager_kb())

@dp.message_handler(text = 'SFPYTHON')
async def promo(message: types.Message):
    if message.text == 'SFPYTHON':
        await message.answer('–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ *—Å–∫–∏–¥–∫–∞ 5%*, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º?',
                             parse_mode=ParseMode.MARKDOWN,
                             reply_markup=pay_kb_course3())
    else:
        await message.answer('*–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ–≤–µ—Ä–Ω—ã–π*, –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑?',
                             parse_mode=ParseMode.MARKDOWN,
                             reply_markup=pay_kb_course1())

@dp.message_handler(text = 'SFTGBOT')
async def promo(message: types.Message):
    if message.text == 'SFTGBOT':
        await message.answer('–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ *—Å–∫–∏–¥–∫–∞ 10%*, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º?',
                             parse_mode=ParseMode.MARKDOWN,
                             reply_markup=pay_kb_course4())
    else:
        await message.answer('*–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ–≤–µ—Ä–Ω—ã–π*, –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑?',
                             parse_mode=ParseMode.MARKDOWN,
                             reply_markup=pay_kb_course2())

@dp.callback_query_handler(text=['yes3'])
async def first_btn_process(call: types.CallbackQuery):
    await call.message.answer(text=text_pay_course_promo,
                              parse_mode=ParseMode.MARKDOWN,
                              reply_markup=manager_kb())

@dp.callback_query_handler(text=['yes4'])
async def first_btn_process(call: types.CallbackQuery):
    await call.message.answer(text=text_pay_course1_promo,
                              parse_mode=ParseMode.MARKDOWN,
                              reply_markup=manager_kb())

text_logo = """
*Full Start - —ç—Ç–æ –≤—ã—Å–æ–∫–æ–∫–ª–∞—Å—Å–Ω–æ–µ community –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏—Ö—Å—è –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö 
Telegram-–±–æ—Ç–æ–≤ –¥–ª—è –ª—é–±–æ–≥–æ –≤–∏–¥–∞ –±–∏–∑–Ω–µ—Å–∞ –∏ –¥—Ä—É–≥–∏—Ö —Å—Ñ–µ—Ä!* 
Telegram-–±–æ—Ç —Å—Ç–∞–Ω–µ—Ç —É–¥–æ–±–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –∫ –í–∞—à–µ–º—É –ø—Ä–æ–µ–∫—Ç—É, –æ–Ω —Å–º–æ–∂–µ—Ç —Å–æ–±—Ä–∞—Ç—å 
–≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –∑–∞—è–≤–∫–∏ –∏ –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å, –ø–æ–º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —Ä—É—Ç–∏–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —á–µ–ª–æ–≤–µ–∫–∞. 

_–° –Ω–∞—á–∞–ª–∞ 2023 –≥–æ–¥–∞ –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–ª–∞ 40+ Telegram-–±–æ—Ç–æ–≤ —Ä–∞–∑–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –ø—Ä–∞–∫—Ç–∏–∫—É—è —Ñ—Ä–∏–ª–∞–Ω—Å_. 

–í –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –∏–º–µ—é—Ç—Å—è —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—à–ª–∏ –∫—É—Ä—Å—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é 
¬´–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Telegram-–±–æ—Ç–æ–≤ –Ω–∞ Python¬ª –≤ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–º –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –ò–Ω–Ω–æ–ø–æ–ª–∏—Å.
"""

text_price = """ –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π —á–∞—Ç-–±–æ—Ç–æ–≤ –≤ Telegram, –Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã 
–∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å –æ–±—â–µ—Å—Ç–≤–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã.\n
_–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —É—Å–ª—É–≥–∏:_"""

text_contacts = """
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: _8 (995) 294-55-32_
E-mail: _project@full-start.ru_
–ê–¥—Ä–µ—Å –æ—Ñ–∏—Å–∞: –≥. –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥, —É–ª. –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ —à–æ—Å—Å–µ, –¥. 12, 4 —ç—Ç–∞–∂, –∫–æ–≤–æ—Ä–∫–∏–Ω–≥ ¬´The Rooms¬ª

*–†–∞–±–æ—Ç–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 10:00 –¥–æ 22:00, –≤ —Å–ª—É—á–∞–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –æ—Ç–≤–µ—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—Éüëç*
"""

text_sales = """
*–ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏ –¥–µ–π—Å—Ç–≤—É—é—â–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å*

–°–∫–∏–¥–∫–∏:
_–°–∫–∏–¥–∫–∞ 5%_ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –†–∞–∑—Ä–∞–±–æ—Ç–∫—É Telegram-–±–æ—Ç–∞ –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º PRO –∏ FULL

–ü—Ä–æ–º–æ–∫–æ–¥—ã:
*SFPYTHON* - –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ _—Å–∫–∏–¥–∫—É 5%_ –Ω–∞ –∫—É—Ä—Å ¬´Python —Å –Ω—É–ª—è¬ª
*SFTGBOT* - –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ _—Å–∫–∏–¥–∫—É 10%_ –Ω–∞ –∫—É—Ä—Å ¬´–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Telegram-–±–æ—Ç–∞ –Ω–∞ Python¬ª
"""

text_lite = """
*–¢–∞—Ä–∏—Ñ LITE*
–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É Telegram-–±–æ—Ç–∞ –ø–æ —Ç–∞—Ä–∏—Ñ—É LITE, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –ø—Ä–∏–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ –í–∞—à—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å. 

–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Ç-–±–æ—Ç–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É —Ç–∞—Ä–∏—Ñ—É –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –∏ –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏. 

–ü–æ –¥–∞–Ω–Ω–æ–º—É —Ç–∞—Ä–∏—Ñ—É –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ç–æ—Ä–∞ (–ù–∞–ø—Ä–∏–º–µ—Ä: –ß–∞—Ç-–±–æ—Ç –≤–∏–∑–∏—Ç–∫–∞, Wikipedia-–±–æ—Ç, –ë–æ—Ç-–≤—Å–µ–∑–Ω–∞–π–∫–∞). 

*–°—Ä–æ–∫–∏: –æ—Ç 2 –¥–æ 4 –¥–Ω–µ–π.*

_–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–æ—Å–ª–µ —Å–¥–∞—á–∏ –ø—Ä–æ–µ–∫—Ç–∞._
"""

text_pro = """
*–¢–∞—Ä–∏—Ñ PRO*
–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É Telegram-–±–æ—Ç–∞ –ø–æ —Ç–∞—Ä–∏—Ñ—É PRO –¥–ª—è –í–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π, 
–º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –±—É–¥–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å–æ–≥–ª–∞—Å–Ω–æ –≤—Å–µ–º –í–∞—à–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –æ–±—Å—É–¥–∏–º –≤–æ –≤—Ä–µ–º—è –ª–∏—á–Ω–æ–π 
–∏–ª–∏ –æ–Ω–ª–∞–π–Ω-–≤—Å—Ç—Ä–µ—á–∏. 

–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ–±–æ–ª—å—à–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞(—Ç.–µ. –ø—Ä–∏–Ω—è—Ç–∏—è –ø–ª–∞—Ç–µ–∂–µ–π), –±–æ—Ç–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏, –±–æ—Ç–∞-–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞(–æ–±–º–µ–Ω–Ω–∏–∫ –≤–∞–ª—é—Ç—ã), –±–æ—Ç–∞-–ø—Å–∏—Ö–æ–ª–æ–≥–∞ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ. 

*–°—Ä–æ–∫–∏: –æ—Ç 5 –¥–æ 8 –¥–Ω–µ–π.*

_–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–æ—Å–ª–µ —Å–¥–∞—á–∏ –ø—Ä–æ–µ–∫—Ç–∞._
"""

text_full = """
*–¢–∞—Ä–∏—Ñ FULL*
–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–≥–æ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ Telegram-–±–æ—Ç–∞ –ø–æ —Ç–∞—Ä–∏—Ñ—É FULL, –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å –ø–æ–º–æ—â—å—é —è–∑—ã–∫–∞ 
–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python, –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω–æ–≥–æ –≤ —Å–≤–æ—ë–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ! 

_–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ –Ω–µ –∏–º–µ–µ—Ç –ª–∏–º–∏—Ç–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –∏ –≤—Å–µ –¥–µ—Ç–∞–ª–∏ –æ–±—Å—É–∂–¥–∞—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. 
–í–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º –º—ã –ø–æ–º–æ–∂–µ–º –í–∞–º –≤—ã–±—Ä–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –∏–º —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –í–∞—à–µ–≥–æ –±–æ—Ç–∞._ 

*–°—Ä–æ–∫ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞: –¥–æ 14 –¥–Ω–µ–π.*

_–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–æ–±—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–æ—Å–ª–µ —Å–¥–∞—á–∏ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ —Ç–∞—Ä–∏—Ñ—É FULL._
"""

text_course1 = """
_–ö—É—Ä—Å ¬´Python —Å –Ω—É–ª—è¬ª –ø–æ–º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ Python —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä—ã–π –Ω–∏–∫–æ–≥–¥–∞ –¥–∞–∂–µ –Ω–µ —É–≥–ª—É–±–ª—è–ª—Å—è –≤ —ç—Ç—É —Å—Ñ–µ—Ä—É!_

*–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—É—Ä—Å–∞ 3 –º–µ—Å—è—Ü–∞.*

_–í –ø—Ä–æ–≥—Ä–∞–º–º—É –∑–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –∑–∞–Ω—è—Ç–∏–π –Ω–∞ 3,2 —á–∞—Å–∞ –≤ –Ω–µ–¥–µ–ª—é._
_–í—Å–µ–≥–æ 38,4 —á–∞—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞ 3 –º–µ—Å—è—Ü–∞, –±–µ–∑ —É—á—ë—Ç–∞ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π._

*–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ —ç—Ç–æ–≥–æ –∫—É—Ä—Å–∞ –≤ —Ç–æ–º, —á—Ç–æ –≤—Å–µ –∑–∞–Ω—è—Ç–∏—è –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ.*

–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º –∫ –æ–±—É—á–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ –º–∏–Ω–∏-–ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –ø–æ –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–π —Ç–µ–º–µ.
(–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–æ—Ä–∏–∏ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ, —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º —Ä–∞–∑–±–æ—Ä–æ–º –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–¥–∞) 

–û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–∞ –≤–æ–∑–º–æ–∂–Ω–∞ –∫–∞–∫ —Å—Ä–∞–∑—É –ø–æ–ª–Ω–æ—Å—Ç—å—é, —Ç–∞–∫ –∏ –µ–∂–µ–º–µ—Å—è—á–Ω–æ.
"""

text_course2 = """
_–ö—É—Ä—Å ¬´–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Telegram-–±–æ—Ç–æ–≤ –Ω–∞ Python¬ª –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç —É–∑–∫–æ—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –æ–±—É—á–µ–Ω–∏—è –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ 
—á–∞—Ç-–±–æ—Ç–æ–≤ –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º, —Å –ø–æ–º–æ—â—å—é —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ aiogram._

*–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—É—Ä—Å–∞ 3 –º–µ—Å—è—Ü–∞.*
_–í –ø—Ä–æ–≥—Ä–∞–º–º—É –∑–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è 3 —á–∞—Å–∞ –∑–∞–Ω—è—Ç–∏–π –≤ –Ω–µ–¥–µ–ª—é._
_–í—Å–µ–≥–æ 36 —á–∞—Å–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞ 3 –º–µ—Å—è—Ü–∞, –±–µ–∑ —É—á—ë—Ç–∞ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π._

*–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ —ç—Ç–æ–≥–æ –∫—É—Ä—Å–∞ –≤ —Ç–æ–º, —á—Ç–æ –≤—Å–µ –∑–∞–Ω—è—Ç–∏—è –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ.*

–ö–∞–∂–¥—ã–µ –¥–≤–µ –Ω–µ–¥–µ–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º —á–∞—Ç-–±–æ—Ç–æ–≤ –ø–æ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–º —Ç–µ–º–∞–º, –∞ –≤ –∫–æ–Ω—Ü–µ –∫—É—Ä—Å–∞ - —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. 

–û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–∞ –≤–æ–∑–º–æ–∂–Ω–∞ –∫–∞–∫ —Å—Ä–∞–∑—É –ø–æ–ª–Ω–æ—Å—Ç—å—é, —Ç–∞–∫ –∏ –µ–∂–µ–º–µ—Å—è—á–Ω–æ. 
"""

text_pay = """
*–¢–∞—Ä–∏—Ñ "LITE"*

–°—Ç–æ–∏–º–æ—Å—Ç—å: –æ—Ç 3000‚ÇΩ
–°–∫–∏–¥–∫–∞: 0‚ÇΩ
*–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: –æ—Ç 3000‚ÇΩ*

*–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã*
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 2200 7006 0120 2509
–ü–æ–ª—É—á–∞—Ç–µ–ª—å: –°—é—Ö–∏–Ω –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á 
–ë–∞–Ω–∫-–ø–æ–ª—É—á–∞—Ç–µ–ª—å: –ê–û ¬´–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫¬ª

_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–æ—Å–∏–º –í–∞—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É_
"""

text_pay1 = """
*–¢–∞—Ä–∏—Ñ "PRO"*
*–î–ª—è –í–∞—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ —Å–∫–∏–¥–∫–∞ 5% –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é —É—Å–ª—É–≥—É*

–°—Ç–æ–∏–º–æ—Å—Ç—å: –æ—Ç 5.000‚ÇΩ
–°–∫–∏–¥–∫–∞: –æ—Ç 250‚ÇΩ
*–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: –æ—Ç 4.500‚ÇΩ*

*–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã*
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 2200 7006 0120 2509
–ü–æ–ª—É—á–∞—Ç–µ–ª—å: –°—é—Ö–∏–Ω –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á 
–ë–∞–Ω–∫-–ø–æ–ª—É—á–∞—Ç–µ–ª—å: –ê–û ¬´–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫¬ª

_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–æ—Å–∏–º –í–∞—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É_
"""
text_pay2 = """
*–¢–∞—Ä–∏—Ñ "FULL"*
*–î–ª—è –í–∞—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ —Å–∫–∏–¥–∫–∞ 5% –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é —É—Å–ª—É–≥—É*

–°—Ç–æ–∏–º–æ—Å—Ç—å: –æ—Ç 10.000‚ÇΩ
–°–∫–∏–¥–∫–∞: –æ—Ç 500‚ÇΩ
*–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: –æ—Ç 9.500‚ÇΩ*

*–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã*
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 2200 7006 0120 2509
–ü–æ–ª—É—á–∞—Ç–µ–ª—å: –°—é—Ö–∏–Ω –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á 
–ë–∞–Ω–∫-–ø–æ–ª—É—á–∞—Ç–µ–ª—å: –ê–û ¬´–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫¬ª

_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–æ—Å–∏–º –í–∞—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É_
"""

text_pay_course = """
*–ö—É—Ä—Å ¬´Python —Å –Ω—É–ª—è¬ª*

–°—Ç–æ–∏–º–æ—Å—Ç—å: 19.200‚ÇΩ
–°–∫–∏–¥–∫–∞: 0‚ÇΩ
*–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: 19.200‚ÇΩ*

*–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã*
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 2200 7006 0120 2509
–ü–æ–ª—É—á–∞—Ç–µ–ª—å: –°—é—Ö–∏–Ω –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á 
–ë–∞–Ω–∫-–ø–æ–ª—É—á–∞—Ç–µ–ª—å: –ê–û ¬´–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫¬ª

_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–æ—Å–∏–º –í–∞—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É_
"""

text_pay_course1 = """
*–ö—É—Ä—Å ¬´–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Telegram-–±–æ—Ç–æ–≤¬ª*

–°—Ç–æ–∏–º–æ—Å—Ç—å: 15.000‚ÇΩ
–°–∫–∏–¥–∫–∞: 0‚ÇΩ
*–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: 15.000‚ÇΩ*

*–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã*
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 2200 7006 0120 2509
–ü–æ–ª—É—á–∞—Ç–µ–ª—å: –°—é—Ö–∏–Ω –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á 
–ë–∞–Ω–∫-–ø–æ–ª—É—á–∞—Ç–µ–ª—å: –ê–û ¬´–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫¬ª

_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–æ—Å–∏–º –í–∞—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É_
"""

text_pay_course_promo = """
*–ö—É—Ä—Å ¬´Python —Å –Ω—É–ª—è¬ª*

–°—Ç–æ–∏–º–æ—Å—Ç—å: 19.200‚ÇΩ
–°–∫–∏–¥–∫–∞: 960‚ÇΩ
*–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: 18.240‚ÇΩ*

*–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã*
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 2200 7006 0120 2509
–ü–æ–ª—É—á–∞—Ç–µ–ª—å: –°—é—Ö–∏–Ω –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á 
–ë–∞–Ω–∫-–ø–æ–ª—É—á–∞—Ç–µ–ª—å: –ê–û ¬´–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫¬ª

_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–æ—Å–∏–º –í–∞—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É_
"""

text_pay_course1_promo = """
*–ö—É—Ä—Å ¬´–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Telegram-–±–æ—Ç–æ–≤¬ª*

–°—Ç–æ–∏–º–æ—Å—Ç—å: 15.000‚ÇΩ
–°–∫–∏–¥–∫–∞: 1.500‚ÇΩ
*–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: 13.500‚ÇΩ*

*–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã*
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 2200 7006 0120 2509
–ü–æ–ª—É—á–∞—Ç–µ–ª—å: –°—é—Ö–∏–Ω –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á 
–ë–∞–Ω–∫-–ø–æ–ª—É—á–∞—Ç–µ–ª—å: –ê–û ¬´–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫¬ª

_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–æ—Å–∏–º –í–∞—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É_
"""

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
